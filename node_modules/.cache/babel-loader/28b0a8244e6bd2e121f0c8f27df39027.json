{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Alok\\\\Documents\\\\Solera-master\\\\Solera-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\Alok\\\\Documents\\\\Solera-master\\\\Solera-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Alok\\\\Documents\\\\Solera-master\\\\Solera-master\\\\src\\\\components\\\\Table.jsx\";\n\nimport React from \"react\";\n\nvar useSortableData = function useSortableData(items) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var _React$useState = React.useState(config),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sortConfig = _React$useState2[0],\n      setSortConfig = _React$useState2[1];\n\n  var sortedItems = React.useMemo(function () {\n    var sortableItems = _toConsumableArray(items);\n\n    if (sortConfig !== null) {\n      sortableItems.sort(function (a, b) {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n\n        return 0;\n      });\n    }\n\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  var requestSort = function requestSort(key) {\n    var direction = 'ascending';\n\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  return {\n    items: sortedItems,\n    requestSort,\n    sortConfig\n  };\n};\n\nvar ProductTable = function ProductTable(props) {\n  var _useSortableData = useSortableData(props.products),\n      items = _useSortableData.items,\n      requestSort = _useSortableData.requestSort,\n      sortConfig = _useSortableData.sortConfig;\n\n  var getClassNamesFor = function getClassNamesFor(name) {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return requestSort('name');\n    },\n    className: getClassNamesFor('name'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Drug\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return requestSort('price');\n    },\n    className: getClassNamesFor('price'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Estimated Cash Price\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return requestSort('stock');\n    },\n    className: getClassNamesFor('stock'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"GoodRx Coupon\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return requestSort('saving');\n    },\n    className: getClassNamesFor('saving'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Saving\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, items.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"$\", item.price), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, item.stock), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, item.saving));\n  })));\n};\n\nexport default function Table() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProductTable, {\n    products: [{\n      id: 1,\n      name: 'atorvastatin',\n      price: '$80.41',\n      stock: '$7.68',\n      saving: '90%'\n    }, {\n      id: 2,\n      name: 'sildenafil',\n      price: '$208.83',\n      stock: '$10.41',\n      saving: '5%'\n    }, {\n      id: 3,\n      name: 'Zoloft (sertraline)',\n      price: '$31.41',\n      stock: '6.52',\n      saving: '79%'\n    }, {\n      id: 4,\n      name: 'Lexapro (escitalopram)',\n      price: '$70.05',\n      stock: '7.21',\n      saving: '89%'\n    }, {\n      id: 5,\n      name: 'losartan',\n      price: '$46.60',\n      stock: '$6.29',\n      saving: '76%'\n    }, {\n      id: 6,\n      name: 'amlodipine',\n      price: '$26.94',\n      stock: '$9.04',\n      saving: '71%'\n    }, {\n      id: 7,\n      name: 'azithromycin',\n      price: '$121.02',\n      stock: '12.48',\n      saving: '89%'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Alok/Documents/Solera-master/Solera-master/src/components/Table.jsx"],"names":["React","useSortableData","items","config","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","ProductTable","props","products","getClassNamesFor","name","undefined","map","item","id","price","stock","saving","Table"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nconst ProductTable = (props) => {\n  const { items, requestSort, sortConfig } = useSortableData(props.products);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('name')}\n              className={getClassNamesFor('name')}\n            >\n              Drug\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('price')}\n              className={getClassNamesFor('price')}\n            >\n              Estimated Cash Price\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('stock')}\n              className={getClassNamesFor('stock')}\n            >\n              GoodRx Coupon\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('saving')}\n              className={getClassNamesFor('saving')}\n            >\n              Saving\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((item) => (\n          <tr key={item.id}>\n            <td>{item.name}</td>\n            <td>${item.price}</td>\n            <td>{item.stock}</td>\n            <td>{item.saving}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default function Table() {\n  return (\n    <div className=\"App\">\n      <ProductTable\n        products={[\n          { id: 1, name: 'atorvastatin', price: '$80.41', stock: '$7.68',saving: '90%' },\n          { id: 2, name: 'sildenafil', price: '$208.83', stock: '$10.41',saving: '5%' },\n          { id: 3, name: 'Zoloft (sertraline)', price: '$31.41', stock: '6.52' ,saving: '79%' },\n          { id: 4, name: 'Lexapro (escitalopram)', price: '$70.05', stock: '7.21' ,saving: '89%'},\n          { id: 5, name: 'losartan', price: '$46.60', stock: '$6.29',saving: '76%' },\n          { id: 6, name: 'amlodipine', price: '$26.94', stock: '$9.04', saving: '71%' },\n          { id: 7, name: 'azithromycin', price: '$121.02', stock: '12.48' , saving: '89%' },\n        ]}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}