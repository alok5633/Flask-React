{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\Alok\\\\Documents\\\\Solera-master\\\\Solera-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  padding: 0 10px;\\n  cursor: pointer;\\n  &:hover {\\n    background-color:silver;\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  z-index: 1;\\n  top: 5px;\\n  padding: 0;\\n  border: 1px solid silver;\\n  background-color: white;\\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\n  list-style: none;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  margin: 0;\\n  border: 1px solid silver;\\n  border-radius: 3px;\\n  font-family: inherit;\\n  font-size: 100%;\\n  -webkit-appearance: searchfield;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  position: relative;\\n  font: normal .8em sans-serif;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import*as React from'react';import fetchJsonp from'fetch-jsonp';import styled from'styled-components';import{StateProvider,DebouncePropagator,AsyncResolver}from'reenhance-components';var Dropdown=styled.div(_templateObject());var Input=styled.input(_templateObject2());var SuggestsUl=styled.ul(_templateObject3());var SuggestsLi=styled.li(_templateObject4());var queryToUrl=function queryToUrl(query){return\"http://localhost:5000/api/data_merged/get_medicines?medName=\".concat(query);};var asyncFetch=function asyncFetch(_ref){var query=_ref.query;return fetchJsonp(queryToUrl(query)).then(function(res){return res.json();});};var SuggestAsyncResolver=AsyncResolver('query',[]);var Suggests=function Suggests(_ref2){var query=_ref2.query;return/*#__PURE__*/React.createElement(SuggestAsyncResolver,{query:query,subject:asyncFetch},function(props){return/*#__PURE__*/React.createElement(\"ul\",null,props[1]&&props[1].length>0?props[1].map(function(str){return/*#__PURE__*/React.createElement(\"li\",{key:str},str);}):/*#__PURE__*/React.createElement(\"li\",null,\"No results\"));});};var InputState=StateProvider('');var SuggestDebounce=DebouncePropagator({query:''});export var SuggestedInput=function SuggestedInput(){return/*#__PURE__*/React.createElement(\"div\",{className:\"inputsearch\"},/*#__PURE__*/React.createElement(InputState,null,function(_ref3){var query=_ref3.state,setQuery=_ref3.setState;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{class:\"inner-addon left-addon\"},/*#__PURE__*/React.createElement(\"i\",{class:\"glyphicon glyphicon-user\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"search\",placeholder:\"Type a drug name (like Atorvastin,Sildenafil,etc)\",value:query,onChange:function onChange(e){return setQuery(e.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{className:\"search\",type:\"submit\"},\"FIND THE LOWEST PRICES\")),/*#__PURE__*/React.createElement(SuggestDebounce,{time:200,query:query},function(_ref4){var query=_ref4.query,state=_ref4.state;return/*#__PURE__*/React.createElement(\"div\",null,query&&/*#__PURE__*/React.createElement(Suggests,{query:query}));}));}));};","map":{"version":3,"sources":["C:/Users/Alok/Documents/Solera-master/Solera-master/src/components/Suggest.jsx"],"names":["React","fetchJsonp","styled","StateProvider","DebouncePropagator","AsyncResolver","Dropdown","div","Input","input","SuggestsUl","ul","SuggestsLi","li","queryToUrl","query","asyncFetch","then","res","json","SuggestAsyncResolver","Suggests","props","length","map","str","InputState","SuggestDebounce","SuggestedInput","state","setQuery","setState","e","target","value"],"mappings":"qtCAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,aAAT,CAAwBC,kBAAxB,CAA4CC,aAA5C,KAAiE,sBAAjE,CAGA,GAAMC,CAAAA,QAAQ,CAAGJ,MAAM,CAACK,GAAV,mBAAd,CAKA,GAAMC,CAAAA,KAAK,CAAGN,MAAM,CAACO,KAAV,oBAAX,CASA,GAAMC,CAAAA,UAAU,CAAGR,MAAM,CAACS,EAAV,oBAAhB,CAWA,GAAMC,CAAAA,UAAU,CAAGV,MAAM,CAACW,EAAV,oBAAhB,CASA,GAAMC,CAAAA,UAAU,CACd,QADIA,CAAAA,UACJ,CAAAC,KAAK,8EAAmEA,KAAnE,GADP,CAGA,GAAMC,CAAAA,UAAU,CACd,QADIA,CAAAA,UACJ,UAAGD,CAAAA,KAAH,MAAGA,KAAH,OACEd,CAAAA,UAAU,CAACa,UAAU,CAACC,KAAD,CAAX,CAAV,CACGE,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,CADF,EADF,CAKM,GAAMC,CAAAA,oBAAoB,CAAGf,aAAa,CAAC,OAAD,CAAU,EAAV,CAA1C,CAEA,GAAMgB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,WAAGN,CAAAA,KAAH,OAAGA,KAAH,oBACf,oBAAC,oBAAD,EAAsB,KAAK,CAAEA,KAA7B,CAAoC,OAAO,CAAEC,UAA7C,EACG,SAAAM,KAAK,qBACJ,8BACGA,KAAK,CAAC,CAAD,CAAL,EAAYA,KAAK,CAAC,CAAD,CAAL,CAASC,MAAT,CAAkB,CAA9B,CAAkCD,KAAK,CAAC,CAAD,CAAL,CAASE,GAAT,CAAa,SAAAC,GAAG,qBACjD,0BAAI,GAAG,CAAEA,GAAT,EAAeA,GAAf,CADiD,EAAhB,CAAlC,cAEI,2CAHP,CADI,EADR,CADe,EAAjB,CAYA,GAAMC,CAAAA,UAAU,CAAGvB,aAAa,CAAC,EAAD,CAAhC,CACA,GAAMwB,CAAAA,eAAe,CAAGvB,kBAAkB,CAAC,CAAEW,KAAK,CAAE,EAAT,CAAD,CAA1C,CAEA,MAAO,IAAMa,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,sBAC5B,2BAAK,SAAS,CAAC,aAAf,eACA,oBAAC,UAAD,MACG,mBAAUb,CAAAA,KAAV,OAAGc,KAAH,CAA2BC,QAA3B,OAAiBC,QAAjB,oBACC,4CACE,2BAAK,KAAK,CAAC,wBAAX,eACA,yBAAG,KAAK,CAAC,0BAAT,EADA,cAEA,6BAAO,IAAI,CAAC,QAAZ,CAAqB,WAAW,CAAC,mDAAjC,CAAqF,KAAK,CAAEhB,KAA5F,CAAmG,QAAQ,CAAE,kBAAAiB,CAAC,QAAIF,CAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,EAA9G,EAFA,cAGA,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,IAAI,CAAC,QAAhC,2BAHA,CADF,cAME,oBAAC,eAAD,EACE,IAAI,CAAE,GADR,CAEE,KAAK,CAAEnB,KAFT,EAIG,mBAAGA,CAAAA,KAAH,OAAGA,KAAH,CAAUc,KAAV,OAAUA,KAAV,oBACC,+BACGd,KAAK,eAAI,oBAAC,QAAD,EAAU,KAAK,CAAEA,KAAjB,EADZ,CADD,EAJH,CANF,CADD,EADH,CADA,CAD4B,EAAvB","sourcesContent":["import * as React from 'react';\nimport fetchJsonp from 'fetch-jsonp';\nimport styled from 'styled-components';\n\nimport { StateProvider, DebouncePropagator, AsyncResolver } from 'reenhance-components';\n\n\nconst Dropdown = styled.div`\n  position: relative;\n  font: normal .8em sans-serif;\n`;\n\nconst Input = styled.input`\n  margin: 0;\n  border: 1px solid silver;\n  border-radius: 3px;\n  font-family: inherit;\n  font-size: 100%;\n  -webkit-appearance: searchfield;\n`;\n\nconst SuggestsUl = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 5px;\n  padding: 0;\n  border: 1px solid silver;\n  background-color: white;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  list-style: none;\n`;\n\nconst SuggestsLi = styled.li`\n  padding: 0 10px;\n  cursor: pointer;\n  &:hover {\n    background-color:silver;\n  }\n`;\n\n\nconst queryToUrl =\n  query => `http://localhost:5000/api/data_merged/get_medicines?medName=${query}`;\n\nconst asyncFetch =\n  ({ query }) =>\n    fetchJsonp(queryToUrl(query))\n      .then(res => res.json());\n\n      const SuggestAsyncResolver = AsyncResolver('query', []);\n\n      const Suggests = ({ query }) => (\n        <SuggestAsyncResolver query={query} subject={asyncFetch}>\n          {props => (\n            <ul>\n              {props[1] && props[1].length > 0 ? props[1].map(str => (\n                <li key={str}>{str}</li>\n              )) : <li>No results</li>}\n            </ul>\n          )}\n        </SuggestAsyncResolver>\n      );\n\n      const InputState = StateProvider('');\n      const SuggestDebounce = DebouncePropagator({ query: '' });\n      \n      export const SuggestedInput = () => (\n        <div className=\"inputsearch\">\n        <InputState>\n          {({ state: query, setState: setQuery }) => (\n            <div>\n              <div class=\"inner-addon left-addon\">\n              <i class=\"glyphicon glyphicon-user\"></i>\n              <input type=\"search\" placeholder=\"Type a drug name (like Atorvastin,Sildenafil,etc)\" value={query} onChange={e => setQuery(e.target.value)} />\n              <button className=\"search\" type=\"submit\">FIND THE LOWEST PRICES</button>\n              </div>\n              <SuggestDebounce\n                time={200}\n                query={query}\n              >\n                {({ query, state }) => (\n                  <div>\n                    {query && <Suggests query={query}/>}\n                  </div>\n                )}\n              </SuggestDebounce>\n            </div>\n          )}\n        </InputState>\n       \n        </div>\n      );\n      \n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}